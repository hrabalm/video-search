version: '3'
services:
  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD-SHELL", 'echo "db.getMongo()" | mongosh --norc --quiet --host=mongo:27017']
      interval: 10s
      timeout: 5s
      retries: 20
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: --save ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 20
  api:
    build: "./backend"
    ports:
      - "8080:5000"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - FLASK_RUN_HOST=0.0.0.0
      - REDIS_URL=redis://redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 20
  api_worker:
    build: "./backend"
    environment:
      - REDIS_URL=redis://redis
    command: pdm run dramatiq -p 2 -t 1 backend.tasks:redis_broker backend.tasks.default backend.tasks.periodic -Q default --watch .
    restart: always
  periodiq:  # periodic tasks scheduler
    build: "./backend"
    environment:
      - REDIS_URL=redis://redis
    command: pdm run periodiq backend.tasks:redis_broker backend.tasks.periodic
    restart: always
  ml_worker_cpu:
    build: "./backend"
    environment:
      - REDIS_URL=redis://redis
    volumes:
      - kerasmodels:/root/.keras
    command: pdm run dramatiq -p 1 -t 1 backend.tasks:redis_broker backend.tasks.ml -Q ml --watch .
    restart: always
  web:
    build: "./client"
    ports:
      - "80:3000"
volumes:
  kerasmodels:
